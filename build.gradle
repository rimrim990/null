plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'

    // apply the asciidoctor plugin
    id "org.asciidoctor.jvm.convert" version '3.3.2'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

jacoco {
    toolVersion = '0.8.11'
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }

    def excludes = [
    ]

    def javaClasses = fileTree(dir: "${buildDir}/classes/java/main", excludes: excludes)
    classDirectories.from = files([javaClasses])

    sourceDirectories.from = files([
            "$project.projectDir/src/main/java",
    ])

    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.50
            }

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.30
            }

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 100
            }

            excludes = [
                    "com.project.undefined.*.entity.*"
            ]
        }
    }
}

java {
    sourceCompatibility = '17'
}

configurations {
    asciidoctorExt

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'mysql:mysql-connector-java:8.0.33'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.rest-assured:rest-assured'
}

ext {
    // define output locations for generated snippets
    snippetsDir = file('build/generated-snippets')
}

// generate documents before building jar
asciidoctor {
    configurations "asciidoctorExt"
    inputs.dir snippetsDir
    dependsOn test
}

// copy documents to jar directory
bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}
